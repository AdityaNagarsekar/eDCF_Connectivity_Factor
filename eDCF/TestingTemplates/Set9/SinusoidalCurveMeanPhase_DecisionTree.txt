self.data_objects = [SinusoidalCurve.SinusoidalCurve(identity=1, amplitude=1.0, phase_difference=0.0, y_center=0.0, noise_rate=0.5), SinusoidalCurve.SinusoidalCurve(identity=2, amplitude=1.0, phase_difference=180.0, y_center=0.5, noise_rate=0.5)]
self.data_objects_names = ['SinusoidalCurve.SinusoidalCurve(identity=1, amplitude=1.0, phase_difference=0.0, y_center=0.0, noise_rate=0.5)', 'SinusoidalCurve.SinusoidalCurve(identity=2, amplitude=1.0, phase_difference=180.0, y_center=0.5, noise_rate=0.5)']

self.num_points: List[int] | int = 10000

self.dataset_name = 'SinusoidalCurveMeanPhase_DecisionTree'

self.algorithm = DecisionTree.DecisionTree(criterion=['gini', 'entropy'], splitter=['best', 'random'], max_depth=[5, 10, 20, 50, 100], min_samples_split=[2, 5, 10], min_samples_leaf=[1, 2, 4], max_features=[None, 'sqrt', 'log2'])
self.algorithm_name = 'DecisionTree(criterion=[\'gini\', \'entropy\'], splitter=[\'best\', \'random\'], max_depth=[5, 10, 20, 50, 100], min_samples_split=[2, 5, 10], min_samples_leaf=[1, 2, 4], max_features=[None, \'sqrt\', \'log2\'])'

self.grid_space: float = 0.0005
self.bounds_buffer: float = 0.0
self.grid_divide: int = 50
self.neighbour_set_method: List[bool] = [False,False]

self.directory_name = "Data/SinusoidalCurveMeanPhase_DecisionTree"